% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/envelopes.r
\name{qdir_envelope}
\alias{qdir_envelope}
\alias{st_envelope}
\alias{unscaled_envelope}
\title{Global scaled maximum absolute difference (MAD) envelope tests}
\usage{
qdir_envelope(curve_set, ...)

st_envelope(curve_set, ...)

unscaled_envelope(curve_set, ...)
}
\arguments{
\item{curve_set}{A curve_set (see \code{\link{create_curve_set}}) or an \code{\link[spatstat]{envelope}}
object. If an envelope object is given, it must contain the summary
functions from the simulated patterns which can be achieved by setting
savefuns = TRUE when calling \code{\link[spatstat]{envelope}}.}

\item{...}{Additional parameters to be passed to \code{\link{global_envelope_test}}.}
}
\value{
An object of class "global_envelope" and "fv" (see \code{\link[spatstat]{fv.object}}),
which can be printed and plotted directly.

Essentially a data frame containing columns
\itemize{
\item r = the vector of values of the argument r at which the test was made
\item obs = values of the test function for the data point pattern
\item lo = the lower envelope based on the simulated functions
\item hi = the upper envelope based on the simulated functions
\item central = If the curve_set (or envelope object) contains a component 'theo',
      then this function is used as the central curve and returned in this component.
      Otherwise, the central curve is the mean of the test functions T_i(r), i=2, ..., s+1.
      Used for visualization only.
}
Additionally, the return value has attributes
\itemize{
  \item method = The name of the method ("Global envelope test")
  \item alternative = "two-sided
  \item p = A point estimate for the p-value (default is the mid-rank p-value).
  \item u_alpha = The value of u corresponding to the 100(1-alpha)\% global envelope.
  \item u = Deviation values (u[1] is the value for the data pattern).
  \item call = The call of the function.
}
and a punch of attributes for the "fv" object type.
}
\description{
Performs the global scaled MAD envelope tests, either directional quantile or studentised,
or the unscaled MAD envelope test. These tests correspond to calling the
function \code{\link{global_envelope_test}} with \code{"qdir"}, \code{type = "st"} and
\code{"unscaled"}, respectively. The functions \code{qdir_envelope}, \code{st_envelope} and
\code{unscaled_envelope} have been kept for historical reasons;
preferably use \code{\link{global_envelope_test}} with the suitable \code{type} argument.
}
\details{
The directional quantile envelope test (Myllymäki et al., 2015, 2017)
takes into account the unequal variances of the test function T(r)
for different distances r and is also protected against asymmetry of T(r).

The studentised envelope test (Myllymäki et al., 2015, 2017)
takes into account the unequal variances of the test function T(r)
for different distances r.

The unscaled envelope test (Ripley, 1981) corresponds to the classical maximum
deviation test without scaling, and leads to envelopes with constant width over the distances r.
Thus, it suffers from unequal variance of T(r) over the distances r and from the asymmetry of
distribution of T(r). We recommend to use the other global envelope tests available,
see \code{\link{global_envelope_test}} for full list of alternatives.
}
\examples{
# See more examples in ?global_envelope_test
## Testing complete spatial randomness (CSR)
#-------------------------------------------
if(require("spatstat", quietly=TRUE)) {
  pp <- spruces
  \donttest{nsim <- 999 # Number of simulations}
  \dontshow{nsim <- 19 # Number of simulations for testing}
  ## Test for complete spatial randomness (CSR)
  # Generate nsim simulations under CSR, calculate L-function for the data and simulations
  env <- envelope(pp, fun="Lest", nsim=nsim, savefuns=TRUE, correction="translate",
                  simulate=expression(runifpoint(ex=pp)))
  res_qdir <- qdir_envelope(env) # The directional quantile envelope test
  plot(res_qdir)
  # or (requires R library ggplot2)
  plot(res_qdir, plot_style="ggplot2")

  ## Advanced use:
  # Create a curve set, choosing the interval of distances [r_min, r_max]
  curve_set <- crop_curves(env, r_min=1, r_max=8)
  # For better visualisation, take the L(r)-r function
  curve_set <- residual(curve_set, use_theo=TRUE)
  # The directional quantile envelope test
  res_qdir <- qdir_envelope(curve_set); plot(res_qdir, plot_style="ggplot2")
  # The studentised envelope test
  res_st <- st_envelope(curve_set); plot(res_st, plot_style="ggplot2")
  # The unscaled envelope test
  res_unscaled <- unscaled_envelope(curve_set); plot(res_unscaled, plot_style="ggplot2")
}
}
\references{
Myllymäki, M., Grabarnik, P., Seijo, H. and Stoyan. D. (2015). Deviation test construction and power comparison for marked spatial point patterns. Spatial Statistics 11: 19-34. doi: 10.1016/j.spasta.2014.11.004

Myllymäki, M., Mrkvička, T., Grabarnik, P., Seijo, H. and Hahn, U. (2017). Global envelope tests for spatial point patterns. Journal of the Royal Statistical Society: Series B (Statistical Methodology), 79: 381–404. doi: 10.1111/rssb.12172

Ripley, B.D. (1981). Spatial statistics. Wiley, New Jersey.
}
\seealso{
\code{\link{global_envelope_test}}, \code{\link{plot.global_envelope}},
\code{\link{global_envelope_test2d}}, \code{\link{GET.composite}}
}
