% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/envelopes.r
\name{qdir_envelope}
\alias{qdir_envelope}
\title{Directional quantile envelope test}
\usage{
qdir_envelope(curve_set, ...)
}
\arguments{
\item{curve_set}{A curve_set (see \code{\link{create_curve_set}}) or an \code{\link[spatstat]{envelope}}
object. If an envelope object is given, it must contain the summary
functions from the simulated patterns which can be achieved by setting
savefuns = TRUE when calling \code{\link[spatstat]{envelope}}.}

\item{...}{Additional parameters to be passed to \code{\link{global_envelope_test}}.}
}
\value{
An object of class "envelope_test", "envelope" and "fv" (see \code{\link[spatstat]{fv.object}}),
which can be printed and plotted directly.

Essentially a data frame containing columns
\itemize{
\item r = the vector of values of the argument r at which the test was made
\item obs = values of the test function for the data point pattern
\item lo = the lower envelope based on the simulated functions
\item hi = the upper envelope based on the simulated functions
\item central = If the curve_set (or envelope object) contains a component 'theo',
      then this function is used as the central curve and returned in this component.
      Otherwise, the central curve is the mean of the test functions T_i(r), i=2, ..., s+1.
      Used for visualization only.
}
Additionally, the return value has attributes
\itemize{
  \item method = The name of the envelope test ("Directional quantile envelope test" for the directional quantile envelope test)
  \item alternative = "two-sided
  \item p = A point estimate for the p-value (default is the mid-rank p-value).
  \item u_alpha = The value of u corresponding to the 100(1-alpha)\% global envelope.
  \item u = Deviation values (u[1] is the value for the data pattern).
  \item call = The call of the function.
}
and a punch of attributes for the "fv" object type.
}
\description{
The directional quantile envelope test, which takes into account the unequal 
variances of the test function T(r) for different distances r and is also 
protected against asymmetry of T(r).
}
\examples{
## Testing complete spatial randomness (CSR)
#-------------------------------------------
require(spatstat)
pp <- spruces
## Test for complete spatial randomness (CSR)
# Generate nsim simulations under CSR, calculate L-function for the data and simulations
env <- envelope(pp, fun="Lest", nsim=999, savefuns=TRUE, correction="translate",
                simulate=expression(runifpoint(pp$n, win=pp$window)))
# The directional quantile envelope test
res <- qdir_envelope(env)
plot(res)
# or (requires R library ggplot2)
plot(res, plot_style="ggplot2")

## Advanced use:
# Create a curve set, choosing the interval of distances [r_min, r_max]
curve_set <- crop_curves(env, r_min = 1, r_max = 8)
# For better visualisation, take the L(r)-r function
curve_set <- residual(curve_set, use_theo = TRUE)
# The directional quantile envelope test
res <- qdir_envelope(curve_set); plot(res, plot_style="ggplot2")

## Random labeling test
#----------------------
# requires library 'marksummary'
mpp <- spruces
# Use the test function T(r) = \\hat{L}_m(r), an estimator of the L_m(r) function
curve_set <- random_labelling(mpp, mtf_name = 'm', nsim=2499, r_min=1.5, r_max=9.5)
res <- qdir_envelope(curve_set)
plot(res, plot_style="ggplot2", ylab=expression(italic(L[m](r)-L(r))))
}
\references{
Myllymäki, M., Grabarnik, P., Seijo, H. and Stoyan. D. (2015). Deviation test construction and power comparison for marked spatial point patterns. Spatial Statistics 11: 19-34. doi: 10.1016/j.spasta.2014.11.004

Myllymäki, M., Mrkvička, T., Grabarnik, P., Seijo, H. and Hahn, U. (2017). Global envelope tests for spatial point patterns. Journal of the Royal Statistical Society: Series B (Statistical Methodology), 79: 381–404. doi: 10.1111/rssb.12172
}
