% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjusted_envelopes.r
\name{dg.global_envelope}
\alias{dg.global_envelope}
\title{Adjusted global envelope tests}
\usage{
dg.global_envelope(X, nsim = 499, nsimsub = nsim, simfun = NULL,
  fitfun = NULL, ..., test = c("rank", "qdir", "st"), alpha = 0.05,
  alternative = c("two.sided", "less", "greater"), r_min = NULL,
  r_max = NULL, take_residual = FALSE, save.cons.envelope = savefuns ||
  savepatterns, savefuns = FALSE, savepatterns = FALSE, verbose = TRUE,
  mc.cores = 1L)
}
\arguments{
\item{X}{An object containing point pattern data. A point pattern (object of class "ppp")
or a fitted point process model (object of class "ppm" or "kppm"). See
\code{\link[spatstat]{envelope}}.}

\item{nsim}{The number of simulations to be generated in the primary test.}

\item{nsimsub}{Number of simulations in each basic test. There will be nsim repetitions of the
basic test, each involving nsimsub simulated realisations, so there will be a total of
nsim * (1 + nsimsub) simulations.}

\item{simfun}{A function for generating simulations from the null model. If given, this function
is called by replicate(n=nsim, simfun(simfun.param), simplify=FALSE) to make nsim simulations.
The function should return an \code{\link[spatstat]{ppp}} object as those are further passed to
\code{\link[spatstat]{envelope}}.
If the function is not provided, then \code{\link[spatstat]{envelope}} is used also for generating
the point patterns from the null hypothesis.}

\item{fitfun}{A function for estimating the parameters of the null model. If not given, then
\code{\link[spatstat]{envelope}} takes care of the parameter estimation as well (and X should be a fitted
model object). The function 'fitfun' should return the fitted model in the form that it can be directly
passed to 'simfun' as the argument 'simfun.arg'.}

\item{...}{Additional parameters passed to \code{\link[spatstat]{envelope}}.
For example, the test function in the argument 'fun' and further specifications regarding that.
If \code{\link[spatstat]{envelope}} is also used to generate simulations under the null hypothesis
(if simfun not provided), then also recall to specify how to generate the simulations.}

\item{test}{Either "rank" for the \code{\link{rank_envelope}} test, "qdir" for the
\code{\link{qdir_envelope}} test or "st" for the \code{\link{st_envelope}} test.}

\item{alpha}{The significance level. The 100(1-alpha)\% global envelope will be calculated.}

\item{alternative}{A character string specifying the alternative hypothesis. Must be one of
the following: "two.sided" (default), "less" or "greater" for "rank". Relevant only for the
rank test (otherwise ignored).}

\item{r_min}{The minimum radius to include in the test.}

\item{r_max}{The maximum radius to include in the test. Note: cannot be larger than r-values used
in calculating functions by \code{\link[spatstat]{envelope}}.}

\item{take_residual}{If (needed for visual reasons only) the theoretical or mean behaviour of the
test function is reduced from the test functions. If TRUE, then: If \code{\link[spatstat]{envelope}}
provides the theoretical value 'theo' for the simulated model, then this value is used. Otherwise,
the theoretical function is taken as the mean of the simulations.}

\item{save.cons.envelope}{Logical flag indicating whether to save the unadjusted envelope test results.}

\item{savefuns}{Logical flag indicating whether to save all the simulated function values.
See \code{\link[spatstat]{envelope}}.}

\item{savepatterns}{Logical flag indicating whether to save all the simulated point patterns.
See \code{\link[spatstat]{envelope}}.}

\item{verbose}{Logical flag indicating whether to print progress reports during the simulations.
See \code{\link[spatstat]{envelope}}.}

\item{mc.cores}{The number of cores to use, i.e. at most how many child processes will be run simultaneously.
Must be at least one, and parallelization requires at least two cores. On a Windows computer mc.cores must be 1
(no parallelization). For details, see \code{\link[parallel]{mclapply}}, for which the argument is passed.}
}
\value{
An object of class adjusted_envelope_test.
}
\description{
Adjusted global rank envelope test, studentized envelope test and directional quantile envelope test.
}
\details{
The specification of X is important here:

1) If simfun = NULL and fitfun = NULL (default), then \code{\link[spatstat]{envelope}}
is used for generating simulations under the null hypothesis and
\itemize{
\item If X is a point pattern, the null hypothesis is CSR.
\item If X is a fitted model, the null hypothesis is that model.
}

2) The user can provide the function for fitting the model (fitfun) and for simulating
from the fitted model (simfun). These functions should be coupled with each other such
that the object returned by 'fitfun' is directly accepted as the (single) argument in 'simfun'.
Further X should then be an \code{\link[spatstat]{ppp}} object and 'fitfun' should accept as
the argument an \code{\link[spatstat]{ppp}} object (X and further simulated point patterns).

A note: The structure of the code, which utilizes \code{\link[spatstat]{envelope}} though the
function \code{\link{global_envelope_with_sims}}, mimics the structure in the function
\code{\link[spatstat]{dg.envelope}} in the use of \code{\link[spatstat]{envelope}}.
However, this function allows for more general use as described above.
}
\references{
Dao, N.A. and Genton, M. (2014). A Monte Carlo adjusted goodness-of-fit test for parametric models describing spatial point patterns. Journal of Graphical and Computational Statistics 23, 497-517.

Myllymäki, M., Mrkvička, T., Grabarnik, P., Seijo, H. and Hahn, U. (2015). Global envelope tests for spatial point patterns. arXiv:1307.0239v4 [stat.ME]
}
\seealso{
\code{\link{rank_envelope}}, \code{\link{qdir_envelope}}, \code{\link{st_envelope}},
\code{\link{plot.adjusted_envelope_test}}
}

