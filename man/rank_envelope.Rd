% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/envelopes.r
\name{rank_envelope}
\alias{rank_envelope}
\title{The rank envelope test}
\usage{
rank_envelope(curve_set, type = "rank", ...)
}
\arguments{
\item{curve_set}{A curve_set (see \code{\link{create_curve_set}}) or an \code{\link[spatstat]{envelope}}
object. If an envelope object is given, it must contain the summary
functions from the simulated patterns which can be achieved by setting
savefuns = TRUE when calling \code{\link[spatstat]{envelope}}.}

\item{type}{The type of the global envelope with current options for "rank", "erl", "cont" and "area".
If "rank", the global rank envelope accompanied by the p-interval is given (Myllymäki et al., 2017).
If "erl", the global rank envelope based on extreme rank lengths accompanied by the extreme rank
length p-value is given (Myllymäki et al., 2017, Mrkvička et al., 2018). See details and additional
sections thereafter.}

\item{...}{Additional parameters to be passed to \code{\link{global_envelope_test}}.}
}
\value{
An object of class "global_envelope" and "fv" (see \code{\link[spatstat]{fv.object}}),
which can be printed and plotted directly.
See \code{\link{global_envelope_test}} for more details.
}
\description{
The rank envelope test, p-values and global envelopes
}
\details{
The test corresponds to the global envelope test that can be carriet out by
\code{\link{global_envelope_test}} by specifying the \code{type} for which the options
\code{"rank"}, \code{"erl"}, \code{"cont"} and \code{"area"} are available. The last
three are modifications of the first one to treat the ties in the extreme rank ordering
used in \code{"rank"}. This function is kept for historical reasons.

The \code{"rank"} envelope test is a completely non-parametric test, which provides
the 100(1-alpha)\% global envelope for the chosen test function T(r) on
the chosen interval of distances and associated p-values.
The other three types are solutions to break the ties in the extreme ranks
on which the \code{"rank"} envelope test is based on.

Note: The method to break ties for the global \code{type = "rank"} envelope
(Myllymäki et al., 2017) can be done by the argument \code{ties} with default
to \code{ties = "erl"} corresponding to the extreme rank length breaking of ties.
In this case the global envelope corresponds to the extreme rank measure.
If instead choosing \code{type} to be \code{"erl"}, \code{"cont"} or \code{"area"},
then the global envelope corresponds to these measures.
}
\section{Global envelope}{

The 100(1-alpha)\% global envelope is provided in addition to the p-values.
If \code{type = "rank"} then the envelope is the global rank envelope proposed by
Myllymäki et al. (2017).
If \code{type = "erl"} then the envelope is the global rank envelope based on the
extreme rank length ordering. This envelope is constructed as the convex hull of
the functions which have extreme rank length measure \eqn{R_i^{erl}}{Rerl_i}
that is larger or equal to the critical \eqn{\alpha}{alpha} level of the extreme rank
length measure (Mrkvička et al., 2018).
}

\section{Number of simulations}{

The extreme rank length ordering test (\code{type = "erl"}) allows in principle a lower numbe
of simulations to be used than the test based on extreme ranks (\code{type = "rank"}).
However, we recommend some thousands of simulations in any case to achieve a good power
and repeatability of the test.
}

\examples{
# See ?global_envelope_test for more examples

## Testing complete spatial randomness (CSR)
#-------------------------------------------
if(require("spatstat", quietly=TRUE)) {
  pp <- unmark(spruces)
  \donttest{nsim <- 2499 # Number of simulations}
  \dontshow{nsim <- 19 # Number of simulations for testing}
  # Generate nsim simulations under CSR, calculate L-function for the data and simulations
  env <- envelope(pp, fun="Lest", nsim=nsim, savefuns=TRUE, correction="translate",
                  simulate=expression(runifpoint(ex=pp)))
  # The rank envelope test
  res <- rank_envelope(env)
  # Plot the result.
  # - The central curve is now obtained from env[['theo']], which is the
  # value of the L-function under the null hypothesis (L(r) = r).
  plot(res)
  # or (requires R library ggplot2)
  plot(res, plot_style="ggplot2")

  ## Advanced use:
  # Choose the interval of distances [r_min, r_max] (at the same time create a curve_set from 'env')
  curve_set <- crop_curves(env, r_min=1, r_max=7)
  # For better visualisation, take the L(r)-r function
  curve_set <- residual(curve_set, use_theo=TRUE)
  # Do the rank envelope test
  res <- rank_envelope(curve_set); plot(res, plot_style="ggplot2")
}
}
\references{
Myllymäki, M., Mrkvička, T., Grabarnik, P., Seijo, H. and Hahn, U. (2017). Global envelope tests for spatial point patterns. Journal of the Royal Statistical Society: Series B (Statistical Methodology), 79: 381–404. doi: 10.1111/rssb.12172

Mrkvička, T., Myllymäki, M. and Hahn, U. (2017). Multiple Monte Carlo testing, with applications in spatial point processes. Statistics & Computing 27 (5): 1239-1255. doi: 10.1007/s11222-016-9683-9

Mrkvička, T., Myllymäki, M., Jilek, M. and Hahn, U. (2018). A one-way ANOVA test for functional data with graphical interpretation. arXiv:1612.03608 [stat.ME]
}
\seealso{
\code{\link{global_envelope_test}}
}
